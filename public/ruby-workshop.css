@import url(s6/projection.css); /* required to make the slide show run at all */

body { font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; }

a:link, a:visited { color: black; }

.slide h1 { font-size: 3.5em; }

.slide h1 {  text-align: center; }

.slide h1.fullscreen { position: absolute;
                       top: 40%;
                       width: 100%; }

/* lets you create slides with no heading (because heading is hidden but gets included in toc) */
.slide h1.hidden     { display: none; }


.slide h2 { font-size: 28pt;  }

h3 { font-size: 25pt;  }

/* todo: add special formating for .cover slide
   lets you use h1(cover). for title/cover slide (a la S5 slide0) but more generic (not bound to 1st slide)
*/

.cover h1 { /* tbd */ }
.cover h2 { /* tbd */ }

/* todo: add special formating for h1, h2 in footer */

#footer h1 { /* tbd */ }
#footer h2 { /* tbd */ }


p, li, dt, dd, td, th { font-size: 2.5em; }

ul { list-style-type: square; }    

/**********************************/
/* general text-alignment classes */

.left   { text-align: left; }
.center { text-align: center; }
.right  { text-align: right;  }

/**********************************/
/* general font-size classes      */

.small { font-size: 97%; }

.x-small,
.smaller { font-size: 88%; }

.xx-small,
.smallest,
.tiny      { font-size: 82%; }



pre { font-size: 1.5em;  }

.code { 
        background-color: azure;
        padding: 5px;
      }
     
.footnote a:first-of-type  { text-decoration: none; }


p.small  { font-size: 97%; }

p.x-small,
p.smaller,  
p.footnote { font-size: 88%; }

p.xx-small,
p.smallest,
p.tiny     { font-size: 82%; }


.help p,
.help td  { font-size: 88%; }

 
.step { color: silver; }
/* or hide next steps e.g.  .step { visibility: hidden; } */
.stepcurrent { color: black; }


/* styles for ultraviolet code syntax highlighting theme 'blackboard' */

pre.blackboard .LatexSupport {
   color: #FBDE2D;
}
pre.blackboard .OcamlInfixOperator {
   color: #8DA6CE;
}
pre.blackboard .MetaFunctionCallPy {
   color: #BECDE6;
}
pre.blackboard .Superclass {
   color: #FF6400;
   font-style: italic;
}
pre.blackboard .Constant {
   color: #D8FA3C;
}
pre.blackboard {
   background-color: #0C1021;
   color: #F8F8F8;
}
pre.blackboard .OcamlFPConstant {
   text-decoration: underline;
}
pre.blackboard .OcamlFPInfixOperator {
   text-decoration: underline;
}
pre.blackboard .Support {
   color: #8DA6CE;
}
pre.blackboard .OcamlOperator {
   color: #F8F8F8;
}
pre.blackboard .Storage {
   color: #FBDE2D;
}
pre.blackboard .line-numbers {
   background-color: #253B76;
   color: #FFFFFF;
}
pre.blackboard .StringInterpolation {
   color: #FF6400;
}
pre.blackboard .InvalidIllegal {
   background-color: #9D1E15;
   color: #F8F8F8;
}
pre.blackboard .PlistUnquotedString {
   color: #FFFFFF;
}
pre.blackboard .OcamlVariant {
   color: #D5E0F3;
}
pre.blackboard .MetaTag {
   color: #7F90AA;
}
pre.blackboard .LatexEnvironment {
   background-color: #F7F7F8;
}
pre.blackboard .OcamlFPPrefixOperator {
   text-decoration: underline;
}
pre.blackboard .OcamlPrefixOperator {
   color: #8DA6CE;
}
pre.blackboard .EntityNameSection {
   color: #FFFFFF;
}
pre.blackboard .String {
   color: #61CE3C;
}
pre.blackboard .Keyword {
   color: #FBDE2D;
}
pre.blackboard .LatexEnvironmentNested {
   background-color: #7691F3;
}
pre.blackboard .InvalidDeprecated {
   color: #AB2A1D;
   font-style: italic;
}
pre.blackboard .Variable {
}
pre.blackboard .Entity {
   color: #FF6400;
}
pre.blackboard .Comment {
   color: #AEAEAE;
}



  #currentSlide {
    font-size: 2em;
  }

  .cover h1 {
    font-size: 6em;
  }

  .large {
    font-size: 1.5em;
  }

  .medium {
    font-size: 0.8em;
  }

  .small {
    font-size: 0.7em;
  }

  .snippet {
    background-color: #eee;
    font-size: 1.1em;
  }

  ul li ul li {
    font-size: 0.8em;
  }

